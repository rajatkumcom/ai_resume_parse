<?php
use Drupal\Core\Form\FormStateInterface;
use Drupal\file\Entity\File;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\ReplaceCommand;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_form_alter().
 */
function resume_parser_ai_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  if ($form_id == 'node_resume_form') {
    $form['field_first_name']['#access'] = FALSE;
    $form['field_last_name']['#access'] = FALSE;
    $form['field_experience']['#access'] = FALSE;
    $form['field_phone']['#access'] = FALSE;
    $form['field_email']['#access'] = FALSE;
    $form['field_skills']['#access'] = FALSE;
    $form['field_education']['#access'] = FALSE;
    $form['field_current_ctc_int']['#prefix'] = '<div id="resume-ajax-content"></div>';
  }
  if ($form_id == 'node_resume_edit_form') {
    $form['field_first_name']['#prefix'] = '<div id="resume-ajax-content">'; 
    $form['field_skills']['#suffix'] = '</div>'; 
  }
  if ($form_id == 'node_resume_edit_form' || $form_id == 'node_resume_form') {
    
    $form['#attached']['library'][] = 'resume_parser_ai/resume_parser_ai.custom';
    $form['title']['#access'] = FALSE;

    $form['field_resume']['#prefix'] = '<div id="resume-hide-job-role">'; 
    $form['field_address']['#suffix'] = '</div>'; 
    
    if(count($form_state->getValues()) > 0) {
      $form['field_first_name']['#access'] = TRUE;
      $form['field_last_name']['#access'] = TRUE;
      $form['field_experience']['#access'] = TRUE;
      $form['field_phone']['#access'] = TRUE;
      $form['field_email']['#access'] = TRUE;
      $form['field_skills']['#access'] = TRUE;
      $form['field_education']['#access'] = TRUE;
    }

    if (\Drupal::request()->query->get('ajax_form') == 1 && \Drupal::request()->query->get('element_parents') != 'field_resume/widget/0') {
      _set_resume_form_value_ajax($form, $form_state);
    }

    $form['ajax_submit'] = [
      '#name' => 'ajax_submit',
      '#type' => 'button', 
      '#value' => t('Ajax Submit'),
      '#ajax' => [
        'event' => 'click',
        'callback' => '_custom_resume_parser_ai_ajax',
        'wrapper' => 'resume-ajax-content',
        'method' => 'replace',
      ],
      '#attributes' => [
        'class' => ['display-none-ajax-button']
      ],
    ];

    array_unshift($form['actions']['submit']['#submit'], '_custom_resume_parser_ai_submission');
  }
}

function _custom_resume_parser_ai_ajax(&$form, FormStateInterface &$form_state) {

  $ajax_return_form = [];

  $ajax_return_form['field_first_name'] = $form['field_first_name'];
  $ajax_return_form['field_last_name'] = $form['field_last_name'];
  $ajax_return_form['field_experience'] = $form['field_experience'];
  $ajax_return_form['field_phone'] = $form['field_phone'];
  $ajax_return_form['field_email'] = $form['field_email'];
  $ajax_return_form['field_skills'] = $form['field_skills'];
  $ajax_return_form['field_education'] = $form['field_education'];
  $ajax_return_form['field_first_name']['#prefix'] = '<div id="resume-ajax-content">'; 
  $ajax_return_form['field_skills']['#suffix'] = '</div>'; 

  $response = new AjaxResponse();
	$response->addCommand(new ReplaceCommand('#resume-ajax-content', $ajax_return_form));

  return $response;
}

function _set_resume_form_value_ajax(&$form, &$form_state) {
  $file = $form_state->getValue('field_resume');

  if(isset($file)) {

    $file = File::load($file[0]['fids'][0]);  
    $uri = $file->getFileUri();
    $url = \Drupal::service('file_url_generator')->generate($uri);

    $string = $url ->toString();

    $string = str_replace('%20', ' ', $string);

    $temp = tempnam(sys_get_temp_dir(), 'TMP_');
    file_put_contents($temp . '.py', file_get_contents(dirname(__FILE__) . "/py_files/pdf_parser.py"));

    $ext = trim(explode('.', $string)[1]);

    exec('python3 ' . $temp . ".py '" . $_SERVER["DOCUMENT_ROOT"] . $string . "' " . $ext, $resume_data, $retval);

    if(isset($resume_data[5]) && $resume_data[5] != 'set()') {
      $education = str_replace("{'", '', $resume_data[5]);
      $education = str_replace("'}", '', $education);
      $education = str_replace("'", '', $education);
      $form['field_education']['widget'][0]['value']['#value'] = $education;
    }

    $form['field_first_name']['widget'][0]['value']['#value'] = (isset($resume_data[0]) && $resume_data[0]) ? '' : $resume_data[0];
    $form['field_last_name']['widget'][0]['value']['#value'] = (isset($resume_data[1]) && $resume_data[1]) ? '' : $resume_data[1];
    $form['field_phone']['widget'][0]['value']['#value'] = isset($resume_data[2]) ? $resume_data[2] : '';
    $form['field_email']['widget'][0]['value']['#value'] = (isset($resume_data[3]) && $resume_data[3]) == 'set()' ? '' : $resume_data[3];
    $form['field_experience']['widget'][0]['value']['#value'] = isset($resume_data[6]) ? $resume_data[6] : '';

    if(isset($resume_data[4]) && $resume_data[4] != 'set()') {
      $skills = str_replace("{'", '', $resume_data[4]);
      $skills = str_replace("'}", '', $skills);
      $skills = str_replace("'", '', $skills);

      $arr_skills = explode(',', $skills);
      $arr_term_ids = [];
      foreach($arr_skills as $key => $str_skill) {
        $terms = \Drupal::entityTypeManager()
              ->getStorage('taxonomy_term')
              ->loadByProperties([
                      'vid' => 'skills',
                      'name' => trim($str_skill),
                  ]);
        if(is_array($terms) && count($terms) > 0) {
          foreach($terms as $term) {
            $arr_term_ids[$term->id()] = $term->getName();
          }
        } else {
          if(!empty($str_skill)) {
            $term_id = Term::create([
              'name' => trim($str_skill), 
              'vid' => 'skills',
            ])->save();
            $arr_term_ids[$term_id] = trim($str_skill);
          }
        }
      }

      $i = 0;
      $str_value = '';
      foreach($arr_term_ids as $term_id => $term_name) {
        $str_value .= $term_name . ' (' . $term_id . '), ';
      }
      $form['field_skills']['widget']['target_id']['#value'] = rtrim($str_value, ", ");
    }
  }
}

function _custom_resume_parser_ai_submission(&$form, FormStateInterface &$form_state) {
  
  \Drupal::messenger()->deleteAll();
  \Drupal::messenger()->addStatus(t('Thank you for uploading your resume.'));

  $form_state->setValue('title', [['value' => $form_state->getValue('field_first_name')[0]['value'] . ' 11' . $form_state->getValue('field_last_name')[0]['value']]]);
   
}

/**
 * Implements hook_entity_view().
 */
function resume_parser_ai_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {

  if ($entity->bundle() == 'resume') {
    $build['#attached']['library'][] = 'resume_parser_ai/resume_parser_ai.custom';
  }

}
